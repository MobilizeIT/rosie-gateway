[  
  {  
    "type":"tab",
    "id":"52a0f579.ad5f0c",
    "label":"HTTPFlow",
    "_def":{  
      "defaults":{  
        "label":{  
          "value":""
        }
      }
    },
    {  
      "id":"22ab56d8.dd54aa",
      "type":"mqtt-broker",
      "z":"52a0f579.ad5f0c",
      "broker":"localhost",
      "port":"1883",
      "clientid":"",
      "usetls":false,
      "verifyservercert":true,
      "compatmode":true,
      "keepalive":"60",
      "cleansession":true,
      "willTopic":"",
      "willQos":"0",
      "willRetain":null,
      "willPayload":"",
      "birthTopic":"",
      "birthQos":"0",
      "birthRetain":null,
      "birthPayload":""
    },
    {  
      "id":"314a10f2.443c3",
      "type":"mqtt-broker",
      "z":"de89aa68.0ef0b8",
      "broker":"10.171.5.102",
      "port":"1883",
      "tls":null,
      "clientid":"",
      "usetls":false,
      "compatmode":true,
      "keepalive":"60",
      "cleansession":true,
      "willTopic":"",
      "willQos":"0",
      "willRetain":null,
      "willPayload":"",
      "birthTopic":"",
      "birthQos":"0",
      "birthRetain":null,
      "birthPayload":""
    },
    {  
      "id":"864bc94f.d4c408",
      "type":"influxdb",
      "z":"de89aa68.0ef0b8",
      "hostname":"10.171.5.129",
      "port":"8086",
      "database":"rosie",
      "name":"Home InfluxDB"
    },
    {  
      "id":"23c47507.dc3b8a",
      "type":"http in",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "url":"/color",
      "method":"get",
      "swaggerDoc":"",
      "x":102.5,
      "y":96,
      "wires":[  
        [  
          "55c1402e.aa3ec"
        ]
      ]
    },
    {  
      "id":"55c1402e.aa3ec",
      "type":"template",
      "z":"52a0f579.ad5f0c",
      "name":"HTML Page Generator",
      "field":"payload",
      "fieldType":"msg",
      "format":"handlebars",
      "syntax":"mustache",
      "template":"<html>\n  <body>\n\n  <form method=\"POST\" action=\"/color\"> \n  <select name=\"color\" onchange=\"this.form.submit()\">\n    <option>Choose a color...</option>\n    <option value=\"RED\">RED</option>\n    <option value=\"GREEN\">GREEN</option>\n    <option value=\"BLUE\">BLUE</option>\n  </select>\n  </form>\n\n  <p>Sensor value (updated once every 1s):</p>\n  <p id=\"demo\"></p>\n\n  <script>\n  var myVar = setInterval(myTimer, 1000);\n  function myTimer() {\n     var txtFile = new XMLHttpRequest();\n     txtFile.open(\"GET\", \"/brightness\", true);\n     txtFile.send();\n     txtFile.onreadystatechange = function() {\n        if (txtFile.readyState == 4 && txtFile.status == 200) \t\n          if (txtFile.responseText != \"\")\n             document.getElementById(\"demo\").innerHTML = txtFile.responseText;\n     }\n  }\n  </script>\n  \n  // This nifty color slider section provided by w3schools.com\n\n <table class=\"w3-table w3-border\" style=\"width:100%\">\n <tr>\n <th>Red</th>\n <th>Green</th>\n <th>Blue</th>\n </tr>\n <tr>\n <td id=\"valRed\">255</td>\n <td id=\"valGreen\">0</td>\n <td id=\"valBlue\">0</td>\n </tr>\n <tr>\n <td id=\"red\" style=\"height:50px;background-color:red\"></td>\n <td id=\"green\" style=\"background-color:green\"></td>\n <td id=\"blue\" style=\"background-color:blue\"></td>\n </tr>\n <tr>\n <td>\n <input onchange=\"changeRed(this.value)\" type=\"range\" id=\"slideRed\" name=\"slideRed\" value=\"255\" min=\"0\" max=\"255\">\n </td>\n <td>\n <input onchange=\"changeGreen(this.value)\" type=\"range\" id=\"slideGreen\" name=\"slideGreen\" value=\"0\" min=\"0\" max=\"255\">\n </td>\n <td>\n <input onchange=\"changeBlue(this.value)\" type=\"range\" id=\"slideBlue\" name=\"slideBlue\" value=\"0\" min=\"0\" max=\"255\">\n </td>\n </tr>\n </table>\n <div id=\"change\" style=\"height:50px\"></div>\n <div id=\"changetxt\" class=\"w3-large w3-padding-large w3-center\"></div>\n <div class=\"w3-center\">\n </div>\n\n <script>\n changeAll();\n function changeRed(value) {\n     document.getElementById('valRed').innerHTML = value;\n     changeAll();\n }\n function changeGreen(value) {\n     document.getElementById('valGreen').innerHTML = value;\n     changeAll();\n }\n function changeBlue(value) {\n     document.getElementById('valBlue').innerHTML = value;\n     changeAll();\n }\n function changeAll() {\n     var r = document.getElementById('valRed').innerHTML;\n     var g = document.getElementById('valGreen').innerHTML;\n     var b = document.getElementById('valBlue').innerHTML;\n     document.getElementById('change').style.backgroundColor = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n     document.getElementById('changetxt').innerHTML = \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n\n // This is our added section for generating a POST request every time the color slider changes\n // Once again, we are using very standard POST code (similar to the GET request)\n     var MQTTsite = new XMLHttpRequest();\n     MQTTsite.open(\"POST\", \"/color\", true);\n     MQTTsite.setRequestHeader('Content-Type', 'application/json');\n     color = convert(r) + convert(g) + convert(b);\n     MQTTsite.send(JSON.stringify({\"color\":color}));\n }\n // We send 2 hex digits each for R - G - B\n function convert(integer) {\n     var str = Number(integer).toString(16);\n     str.length = 2;\n     return str.length == 1 ? \"0\" + str : str;\n };\n </script>\n\n  </body>\n </html>",
      "x":350.5,
      "y":135,
      "wires":[  
        [  
          "5192d59b.ae6d2c"
        ]
      ]
    },
    {  
      "id":"5192d59b.ae6d2c",
      "type":"http response",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "x":611.5,
      "y":104,
      "wires":[]
    },
    {  
      "id":"d38ab0a7.2c755",
      "type":"http in",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "url":"/color",
      "method":"post",
      "swaggerDoc":"",
      "x":99.5,
      "y":226,
      "wires":[  
        [  
          "55c1402e.aa3ec",
          "72267801.8dd988"
        ]
      ]
    },
    {  
      "id":"72267801.8dd988",
      "type":"function",
      "z":"52a0f579.ad5f0c",
      "name":"make 'color' the payload",
      "func":"var color = msg.payload.color;  \nmsg.payload = color;  \nreturn msg;  ",
      "outputs":1,
      "noerr":0,
      "x":343.5,
      "y":278,
      "wires":[  
        [  
          "701d987e.8fe268"
        ]
      ]
    },
    {  
      "id":"701d987e.8fe268",
      "type":"mqtt out",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "topic":"color",
      "qos":"",
      "retain":"",
      "broker":"22ab56d8.dd54aa",
      "x":606.5,
      "y":228,
      "wires":[]
    },
    {  
      "id":"fd84879f.027b78",
      "type":"mqtt in",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "topic":"brightness",
      "qos":"2",
      "broker":"22ab56d8.dd54aa",
      "x":111.5,
      "y":404,
      "wires":[  
        [  
          "78f71302.8708ec",
          "a1f4221d.5e0be"
        ]
      ]
    },
    {  
      "id":"aaaf36f.f5550c8",
      "type":"file in",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "filename":"/root/brightness.txt",
      "format":"utf8",
      "x":392.5,
      "y":541,
      "wires":[  
        [  
          "6a675202.9598ac",
          "f6093614.09f6c8"
        ]
      ]
    },
    {  
      "id":"56cb2349.a934dc",
      "type":"http in",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "url":"/brightness",
      "method":"get",
      "swaggerDoc":"",
      "x":127.5,
      "y":538,
      "wires":[  
        [  
          "aaaf36f.f5550c8"
        ]
      ]
    },
    {  
      "id":"78f71302.8708ec",
      "type":"file",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "filename":"/root/brightness.txt",
      "appendNewline":true,
      "createDir":true,
      "overwriteFile":"true",
      "x":352.5,
      "y":375,
      "wires":[]
    },
    {  
      "id":"6a675202.9598ac",
      "type":"template",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "field":"payload",
      "fieldType":"msg",
      "format":"handlebars",
      "syntax":"mustache",
      "template":"{{payload}}",
      "x":610.5,
      "y":576,
      "wires":[  
        [  
          "babbc594.454438"
        ]
      ]
    },
    {  
      "id":"babbc594.454438",
      "type":"http response",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "x":805.5,
      "y":546,
      "wires":[]
    },
    {  
      "id":"f6093614.09f6c8",
      "type":"debug",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"false",
      "x":603.5,
      "y":491,
      "wires":[]
    },
    {  
      "id":"a1f4221d.5e0be",
      "type":"Hue Pull",
      "z":"52a0f579.ad5f0c",
      "deviceid":"4",
      "serverid":"001788fffe17f7c0",
      "name":"",
      "x":343.5,
      "y":436,
      "wires":[  
        [  
          "9947631e.66b8a"
        ],
        []
      ]
    },
    {  
      "id":"9947631e.66b8a",
      "type":"debug",
      "z":"52a0f579.ad5f0c",
      "name":"",
      "active":true,
      "console":"false",
      "complete":"payload",
      "x":574.5,
      "y":416,
      "wires":[]
    }
  ]